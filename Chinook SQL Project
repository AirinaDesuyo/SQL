1. Show Customers (their full names, customer ID, and country) who are not in the US. 
(Hint: != or <> can be used to say "is not equal to").
SELECT FirstName, LastName, CustomerId, Country FROM customers
WHERE Country <> 'USA';

2. Show only the Customers from Brazil.
SELECT FirstName, LastName, CustomerId, Country FROM customers
WHERE Country = 'Brazil';

3. Find the Invoices of customers who are from Brazil. 
The resulting table should show the customer's full name, Invoice ID, date of the invoice, and billing country.
SELECT c.FirstName, c.LastName, i.InvoiceId, i.InvoiceDate, i.BillingCountry FROM invoices AS i
RIGHT JOIN customers AS c
ON c.customerId = i.customerId
WHERE BillingCountry = 'Brazil';

4. Show the Employees who are Sales Agents.
SELECT FirstName, LastName, Title FROM employees
WHERE Title LIKE '%Sales % Agent%';

5. Find a unique/distinct list of billing countries from the Invoice table.
SELECT DISTINCT BillingCountry FROM INVOICES;

6. Provide a query that shows the invoices associated with each sales agent. 
The resulting table should include the Sales Agent's full name.
SELECT e.FirstName, e.LastName, e.Title, i.invoiceId FROM employees AS e
JOIN customers AS c
ON e.EmployeeId = c.SupportRepId
JOIN invoices AS i
ON c.customerId = i.customerId
WHERE Title LIKE '%Sales % Agent%';

7. Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.
SELECT emp.LastName, emp.Firstname, cust.FirstName, cust.LastName, cust.Country, inv.total
FROM chinook.employees emp 
JOIN chinook.Customers cust ON cust.SupportRepId = emp.EmployeeId
JOIN chinook.Invoices Inv ON Inv.CustomerId = cust.CustomerId;

8. How many Invoices were there in 2009?
SELECT COUNT(*) FROM invoices
WHERE InvoiceDate LIKE '2009%';

9. What are the total sales for 2009?
SELECT SUM(Total) FROM invoices
WHERE InvoiceDate LIKE '2009%';

10. Write a query that includes the purchased track name with each invoice line ID.
SELECT t.Name, ii.InvoiceLineId FROM invoice_items AS ii
LEFT JOIN tracks AS t
ON t.TrackId = ii.TrackId;

11. Write a query that includes the purchased track name AND artist name with each invoice line ID.
SELECT t.Name, ii.InvoiceLineId, ar.Name FROM invoice_items AS ii
LEFT JOIN tracks AS t
ON t.TrackId = ii.TrackId
JOIN albums as a
ON t.AlbumId = a.AlbumId
JOIN artists as ar
ON a.ArtistId = ar.ArtistId;

12. Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.
SELECT t.Name AS 'Track Name', a.Title AS 'Album Title', mt.Name AS 'Media Type', g.Name AS 'Genre' FROM Tracks AS t
JOIN media_types as mt
ON t.MediaTypeId = mt.MediaTypeId
JOIN albums as a
ON t.AlbumId = a.AlbumId
JOIN genres as g
ON t.GenreId = g.GenreId;

13. Show the total sales made by each sales agent.
SELECT emp.FirstName, emp.LastName,
ROUND(SUM(Inv.Total), 2) as 'Total Sales' 
FROM chinook.Employees emp
JOIN chinook.Customers cust 
ON cust.SupportRepId = emp.EmployeeId
JOIN chinook.Invoices Inv 
ON Inv.CustomerId = cust.CustomerId
WHERE emp.Title = 'Sales Support Agent' 
GROUP BY emp.FirstName;

14. Which sales agent made the most dollars in sales in 2009?
SELECT emp.FirstName, emp.LastName,
ROUND(SUM(Inv.Total), 2) as 'Total Sales' 
FROM chinook.Employees emp
JOIN chinook.Customers cust 
ON cust.SupportRepId = emp.EmployeeId
JOIN chinook.Invoices Inv 
ON Inv.CustomerId = cust.CustomerId
WHERE emp.Title = 'Sales Support Agent' 
AND Inv.InvoiceDate LIKE '2009%' 
GROUP BY emp.FirstName
ORDER BY (round(sum(Inv.Total), 2))  DESC LIMIT 1;
